---
import BaseHead from '@/components/BaseHead.astro'
import Header from '@/components/Header.astro'
import Footer from '@/components/Footer.astro'
import { getCollection } from 'astro:content'
import FormattedDate from '@/components/FormattedDate.astro'
import Container from '@/components/Container.astro'

const posts = (await getCollection('blog')).sort(
  (a: { data: { pubDate: number } }, b: { data: { pubDate: number } }) =>
    a.data.pubDate.valueOf() - b.data.pubDate.valueOf(),
)
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title="Blog" description="Blog page description" />
  </head>
  <body>
    <Header />
    <main>
      <Container>
        <section>
          <ul class="list">
            {
              posts.map(
                (post: {
                  slug: any
                  data: {
                    heroImage: string | null | undefined
                    title: unknown
                    pubDate: Date
                  }
                }) => (
                  <li class="post">
                    <a href={`/blog/${post.slug}/`}>
                      <img width={720} height={360} src={post.data.heroImage} alt="" class="image" transition:name={`blog-placeholder-${post.slug}`} />
                      <h4 class="title">{post.data.title}</h4>
                      <p class="date">
                        <FormattedDate date={post.data.pubDate} />
                      </p>
                    </a>
                  </li>
                ),
              )
            }
          </ul>
        </section>
      </Container>
    </main>
    <Footer />
  </body>
</html>

<style lang="scss">
  .list {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    gap: 24px;
  }

  .post a {
    text-decoration: none;
  }

  .image {
    width: 100%;
    aspect-ratio: 4 / 2.5;
    object-fit: cover;
    border-radius: var(--rounded-sm);
  }

  .title {
    color: var(--c-text-1);
  }

  .date {
    font-size: 14px;
    color: var(--c-text-2);
  }
</style>

